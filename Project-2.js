/*+++++++++Even Fibonacci numbers++++++++++
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. */

// take limit as arg, set the sum to 0 to keep track of the sum, to store previous value, fib current to store the current value
function sumEven(limit) {
  let sum = 0;
  let fibPrev = 1;
  let fibCurr = 2;

//use a while loop to generate Fibonacci numbers until the current Fibonacci number exceeds the given limit.
  while (fibCurr <= limit) {
    if (fibCurr % 2 === 0) {
      sum += fibCurr;
    }
    //We update the Fibonacci numbers by assigning fibCurr to fibPrev and fibNext (the sum of fibPrev and fibCurr) to fibCurr.
    let fibNext = fibPrev + fibCurr;
    fibPrev = fibCurr;
    fibCurr = fibNext;
  }

  return sum;
}

console.log(sumEven(4000000));
